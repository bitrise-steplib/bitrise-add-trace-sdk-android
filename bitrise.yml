format_version: 8
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_ID: add-trace-sdk-android
  - BITRISE_STEP_VERSION: "0.0.1"
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/bitrise-step-add-trace-sdk-android.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL

workflows:
  test:
    steps:
      - script:
          inputs:
          - content: stepman audit --step-yml ./step.yml
      - go-list:
      - golint:
      - errcheck:
      - go-test:
    after_run:
      - test_config_file

  # Integration test for creating the config file.
  test_config_file:
    steps:
    - script:
        title: Initialise test
        description: Deletes the tmp directory for a fresh start and sets the required env vars.
        inputs:
        - content: |
            #!/bin/bash
            echo "Deleted tmp directory"
            rm -rf ./_tmp

            APM_COLLECTOR_TOKEN="sampleToken"
            envman add --key APM_COLLECTOR_TOKEN --value $APM_COLLECTOR_TOKEN
            echo "Set \"$APM_COLLECTOR_TOKEN\" as the token"
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - path::./:
        title: Step Test
        description: |-
          Runs the test, which ensure that the correct configuration file is created.
        run_if: true
        inputs:
        - example_step_input: Example Step Input's value
    - script:
        title: Check test results
        description: Deletes the tmp directory for a fresh start and sets the required env vars.
        inputs:
        - content: |
            #!/bin/bash
            # Set colors for test prints
            RED='\033[0;31m'
            GREEN='\033[0;32m'
            NC='\033[0m'

            echo "Checking if config file created"
            FILE="bitrise-addons-configuration.json"
            if [ -f "$FILE" ]; then
                echo -e "${GREEN}$FILE exists.${NC}"
            else
                echo -e "${RED}$FILE does not exists.${NC}"
                exit 1
            fi

            echo ""

            echo "Checking content of $FILE"
            expected_content='{"version":"1.0.0","token":"sampleToken"}'
            actual_content=$( cat $FILE )
            if [ "$actual_content" == "$expected_content" ]; then
                echo -e "${GREEN}$FILE content is the expected!${NC}"
            else
                echo -e "${RED}$FILE content was \"$actual_content\", but expected \"$expected_content\".${NC}"
                exit 1
            fi


  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - BITRISE_STEP_ID: $BITRISE_STEP_ID
      - BITRISE_STEP_VERSION: $BITRISE_STEP_VERSION
      - BITRISE_STEP_GIT_CLONE_URL: $BITRISE_STEP_GIT_CLONE_URL
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `BITRISE_STEP_ID` and `BITRISE_STEP_VERSION`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c "${MY_STEPLIB_REPO_FORK_GIT_URL}"
            bitrise share create --stepid "${BITRISE_STEP_ID}" --tag "${BITRISE_STEP_VERSION}" --git "${BITRISE_STEP_GIT_CLONE_URL}"
            bitrise share finish
